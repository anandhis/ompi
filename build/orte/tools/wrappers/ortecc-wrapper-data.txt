# There can be multiple blocks of configuration data, chosen by
# compiler flags (using the compiler_args key to chose which block
# should be activated.  This can be useful for multilib builds.  See the
# multilib page at:
#    https://github.com/open-mpi/ompi/wiki/compilerwrapper3264
# for more information.

project=Open Run-Time Environment (ORTE)
project_short=ORTE
version=3.0.0a1
language=C
compiler_env=CC
compiler_flags_env=CFLAGS
compiler=gcc
preprocessor_flags=-I${includedir}/openmpi -I${pkgincludedir}/opal/mca/hwloc/hwloc1112/hwloc/include -I${pkgincludedir}/opal/mca/event/libevent2022/libevent -I${pkgincludedir}/opal/mca/event/libevent2022/libevent/include  
compiler_flags_prefix=
compiler_flags=-pthread 
linker_flags=    -Wl,-rpath -Wl,@{libdir} -Wl,--enable-new-dtags
# Note that per https://svn.open-mpi.org/trac/ompi/ticket/3422, we
# intentionally always link in open-pal and open-rte in
# ortecc/ortec++ because we intend ORTE applications to use both the
# ORTE and OPAL APIs.
libs=-lopen-rte -lopen-pal
libs_static=-lopen-rte -lopen-pal -lm -lnuma -ludev -ldl -lutil 
dyn_lib_file=libopen-rte.so
static_lib_file=libopen-rte.a
required_file=
includedir=${includedir}
libdir=${libdir}
